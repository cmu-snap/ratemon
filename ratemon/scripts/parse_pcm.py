#!/usr/bin/env python3
"""
Parses pcm.csv files generated by hostCC's record-host-metrics.sh script.
Currently, this returns cache miss rates.
"""

import argparse
import sys

import numpy as np

PERCENTILES = [10.0, 25.0, 50.0, 75.0, 90.0, 95.0, 99.0, 99.9, 99.99, 100.0]


def parse_args():
    parser = argparse.ArgumentParser(
        description="Calculate statistics from PCM metrics"
    )
    parser.add_argument("--in-file", type=str, help="Input file.", required=True)
    parser.add_argument("--out-file", type=str, help="Output file.", required=True)
    return parser.parse_args()


def find_col(key1, key2, cols):
    """
    cols is a list of lists, where each sublist represents a column in the input CSV
    file. A columns is of the form:
        [ key1, key2, values1, value2, value3, ... ]
    This function searches for the column with the given key1 and key2 and returns a
    numpy array of the values converted to floats. key1 and key2 are assumed to uniquely
    identify a column.
    """
    for col in cols:
        if key1 in col and key2 in col:
            return np.asarray([float(x) for x in col[2:]])
    raise RuntimeError(f"Key {key1}/{key2} not found!")


def main(args):
    cols = []
    with open(args.in_file, "r", encoding="utf-8") as fil:
        for line in fil:
            if "is disabled" in line:
                continue
            for i, tok in enumerate(line.strip().split(",")):
                if i >= len(cols):
                    cols.append([])
                cols[i].append(tok)

    l2misses = find_col("System", "L2MISS", cols)
    l3misses = find_col("System", "L3MISS", cols)

    msg = (
        f"Avg L2 miss rate:{np.mean(l2misses):.4f}\n"
        f"Avg L3 miss rate:{np.mean(l3misses):.4f}"
    )
    print(msg)
    with open(args.out_file, "w", encoding="utf-8") as fil:
        fil.write(msg)
    return 0


if __name__ == "__main__":
    sys.exit(main(parse_args()))
